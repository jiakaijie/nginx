
# user  nobody;
# 配置启动进程数
# auto 根据 cpu 核数启动相应的进程
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    # 返回文件类型
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    # http keepalive 时长
    keepalive_timeout  65;

    # gzip  on;
    # gzip_comp_level 5;

    # 其他配置文件合并
    # include /usr/local/etc/nginx/conf.d/*.conf;

    server {
        # 监听端口
        listen       80;
        server_name  localhost;

        # 编码格式
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # 开启gzip
        gzip on;
        # 启用gzip压缩的最小文件；小于设置值的文件将不会被压缩
        gzip_min_length 1k;
        # gzip 压缩级别 1-9 一般默认就够用，配置越高，越耗cpu
        # gzip_comp_level 9;
        # 进行压缩的文件类型。image/jpeg image/gif image/png 图片不使用gzip压缩，gzip属于无损压缩，对图片压缩不了多少，但耗cpu性能
        gzip_types text/plain application/xhtml+xml application/xml text/css application/javascript application/x-javascript text/javascript application/x-httpd-php;
        # 是否在http header中添加Vary: Accept-Encoding，建议开启。当前浏览器都支持了这个配置。但加上无妨 
        gzip_vary on;

        # 反向代理配置
        # 当访问 /qdweb 时，proxy_pass 目前测试只能配置域名、ip、端口，会按照 http://127.0.0.1:9998/qdweb 的方式去访问
        # location ~ /qdweb {
        #     proxy_pass   http://127.0.0.1:9998;
        # }

        # 反向代理配置 访问服务端接口
        #
        # 服务：http://127.0.0.1:3000/api/users/gogo
        # 代理后：http://127.0.0.1/abc/api/users/gogo
        # 代理过程中/api会直接拼到代理的服务端口后访问
        #
        
        location ~ ^\/(abc)\/(.*)$ {
            add_header ttm ttm;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://127.0.0.1:3000/$2?$args;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    # include servers/*;
}